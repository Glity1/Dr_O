version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: review_db
    environment:
      POSTGRES_USER: review_user
      POSTGRES_PASSWORD: review_password
      POSTGRES_DB: review_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - review_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U review_user -d review_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: review_backend
    environment:
      DATABASE_URL: postgresql://review_user:review_password@postgres:5432/review_db
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      DUMMY_SITE_URL: http://dummy_site:5000
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      dummy_site:
        condition: service_started
    networks:
      - review_network
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  dummy_site:
    build:
      context: ./dummy_site
      dockerfile: Dockerfile
    container_name: review_dummy_site
    ports:
      - "5000:5000"
    networks:
      - review_network
    volumes:
      - ./dummy_site:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: review_frontend
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8000
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - review_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  review_network:
    driver: bridge